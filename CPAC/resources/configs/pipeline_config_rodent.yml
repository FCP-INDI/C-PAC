%YAML 1.1
---
# CPAC Pipeline Configuration YAML file
# Version 1.8.0
#
# http://fcp-indi.github.io for more info.
#
# Tip: This file can be edited manually with a text editor for quick modifications.

FROM: default


pipeline_setup: 

  # Name for this pipeline configuration - useful for identification.
  pipeline_name: analysis

  log_directory: 

    path: /tmp

  system_config: 

    # The maximum amount of memory each participant's workflow can allocate.
    # Use this to place an upper bound of memory usage.
    # - Warning: 'Memory Per Participant' multiplied by 'Number of Participants to Run Simultaneously'
    #   must not be more than the total amount of RAM.
    # - Conversely, using too little RAM can impede the speed of a pipeline run.
    # - It is recommended that you set this to a value that when multiplied by
    #   'Number of Participants to Run Simultaneously' is as much RAM you can safely allocate.
    maximum_memory_per_participant: 6.0

    # The maximum amount of cores (on a single machine) or slots on a node (on a cluster/grid)
    # to allocate per participant.
    # - Setting this above 1 will parallelize each participant's workflow where possible.
    #   If you wish to dedicate multiple cores to ANTS-based anatomical registration (below),
    #   this value must be equal or higher than the amount of cores provided to ANTS.
    # - The maximum number of cores your run can possibly employ will be this setting multiplied
    #   by the number of participants set to run in parallel (the 'Number of Participants to Run
    #   Simultaneously' setting).
    max_cores_per_participant: 4

    # The number of cores to allocate to ANTS-based anatomical registration per participant.
    # - Multiple cores can greatly speed up this preprocessing step.
    # - This number cannot be greater than the number of cores per participant.
    num_ants_threads: 4

    # Full path to the FSL version to be used by CPAC.
    # If you have specified an FSL path in your .bashrc file, this path will be set automatically.
    FSLDIR: FSLDIR

anatomical_preproc: 

  # Non-local means filtering via ANTs DenoiseImage
  non_local_means_filtering: Off

  # N4 bias field correction via ANTs
  n4_bias_field_correction: On

  brain_extraction: 

    # using: ['3dSkullStrip', 'BET', 'UNet', 'niworkflows-ants']
    # this is a fork option
    using: [BET]

    FSL-BET: 

      # Integer value of head radius
      radius: 50

      # Robust brain center estimation. Mutually exclusive with functional,reduce_bias,robust,padding,remove_eyes,surfaces
      robust: On

segmentation: 

  # Automatically segment anatomical images into white matter, gray matter,
  # and CSF based on prior probability maps.
  run: On

  tissue_segmentation: 

    using: ['Template_Based']

    # option parameters
    FSL-FAST: 

      use_priors: 

        # Use template-space tissue priors to refine the binary tissue masks generated by segmentation.
        run: Off

        # Full path to a directory containing binarized prior probability maps.
        # These maps are included as part of the 'Image Resource Files' package available on the Install page of the User Guide.
        # It is not necessary to change this path unless you intend to use non-standard priors.
        priors_path: /template

        # Full path to a binarized White Matter prior probability map.
        # It is not necessary to change this path unless you intend to use non-standard priors.
        WM_path: study_based_functional_template_mask.nii.gz

        # Full path to a binarized Gray Matter prior probability map.
        # It is not necessary to change this path unless you intend to use non-standard priors.
        GM_path: study_based_functional_template_mask.nii.gz

        # Full path to a binarized CSF prior probability map.
        # It is not necessary to change this path unless you intend to use non-standard priors.
        CSF_path: study_based_functional_template_mask.nii.gz

    Template_Based: 

      # These masks should be in the same space of your registration template, e.g. if
      # you choose 'EPI Template' , below tissue masks should also be EPI template tissue masks.
      #
      # Options: ['T1_Template', 'EPI_Template']
      template_for_segmentation: [EPI_Template]

      # These masks are included as part of the 'Image Resource Files' package available
      # on the Install page of the User Guide.

      # Full path to a binarized White Matter mask.
      WHITE: /template/chd8_functional_template_ventricles_ag.nii.gz

      # Full path to a binarized Gray Matter mask.
      GRAY: /template/chd8_functional_template_ventricles_ag.nii.gz

      # Full path to a binarized CSF mask.
      CSF: /template/chd8_functional_template_ventricles_ag.nii.gz

registration_workflows: 

  anatomical_registration: 

    # The resolution to which anatomical images should be transformed during registration.
    # This is the resolution at which processed anatomical files will be output.
    resolution_for_anat: 2.3mmx2.3mmx6mm

    # Template to be used during registration.
    # It is not necessary to change this path unless you intend to use a non-standard template.
    T1w_brain_template: /template/study_based_functional_template_sk.nii.gz

    # Template to be used during registration.
    # It is not necessary to change this path unless you intend to use a non-standard template.
    T1w_template: /template/study_based_functional_template.nii.gz
    
    # Template to be used during registration.
    # It is not necessary to change this path unless you intend to use a non-standard template.
    T1w_brain_template_mask: None

    registration: 

      # option parameters
      ANTs: 

        # ANTs parameters for T1-template-based registration
        T1_registration: 
          - dimensionality: 3
          - initial-moving-transform:
              initializationFeature: 1
          - transforms:
            - Affine:
                convergence:
                  iteration: 100x100x30
                gradientStep: 0.25
                metric:
                  metricWeight: 1
                  radius: 2
                  type: CC
                shrink-factors: 5x3x1
                smoothing-sigmas: 5x3x0
            - SyN:
                convergence:
                  iteration: 100x100x30
                gradientStep: 0.15
                metric:
                  metricWeight: 1
                  radius: 2
                  type: CC
                shrink-factors: 5x3x1
                smoothing-sigmas: 5x3x0
                totalFieldVarianceInVoxelSpace: 1
                updateFieldVarianceInVoxelSpace: 5

        # Interpolation method for writing out transformed anatomical images.
        # Possible values: Linear, BSpline, LanczosWindowedSinc
        interpolation: Linear
        
      FSL-FNIRT: 

        # Configuration file to be used by FSL to set FNIRT parameters.
        # It is not necessary to change this path unless you intend to use custom FNIRT parameters or a non-standard template.
        fnirt_config: T1_2_MNI152_2mm

        # Reference mask for FSL registration.
        ref_mask: None

  functional_registration: 

    coregistration:
    
      run: Off
    
      func_input_prep:

        # Choose whether to use the mean of the functional/EPI as the input to functional-to-anatomical registration or one of the volumes from the functional 4D timeseries that you choose.
        # input: ['Mean Functional', 'Selected_Functional_Volume']
        input: ['Mean_Functional']

        Mean Functional:

          # Run ANTs\u2019 N4 Bias Field Correction on the input BOLD (EPI)
          # this can increase tissue contrast which may improve registration quality in some data
          n4_correct_func: False

        Selected Functional Volume:

          # Only for when 'Use as Functional-to-Anatomical Registration Input' is set to 'Selected Functional Volume'.
          #Input the index of which volume from the functional 4D timeseries input file you wish to use as the input for functional-to-anatomical registration.
          func_reg_input_volume: 0

      boundary_based_registration: 

        # this is a fork point
        #   run: [On, Off] - this will run both and fork the pipeline
        run: [Off]

    EPI_registration:
    
      run: On

      ANTs: 

        # EPI registration configuration - synonymous with T1_registration
        # parameters under anatomical registration above
        parameters: 
          - dimensionality: 3
          - initial-moving-transform:
              initializationFeature: 1
          - transforms:
            - Affine:
                convergence:
                  iteration: 100x100x30
                gradientStep: 0.25
                metric:
                  metricWeight: 1
                  radius: 2
                  type: CC
                shrink-factors: 5x3x1
                smoothing-sigmas: 5x3x0
            - SyN:
                convergence:
                  iteration: 100x100x30
                gradientStep: 0.15
                metric:
                  metricWeight: 1
                  radius: 2
                  type: CC
                shrink-factors: 5x3x1
                smoothing-sigmas: 5x3x0
                totalFieldVarianceInVoxelSpace: 1
                updateFieldVarianceInVoxelSpace: 5

    func_registration_to_template: 

      output_resolution: 

        # The resolution (in mm) to which the preprocessed, registered functional timeseries outputs are written into.
        # NOTE:
        #   selecting a 1 mm or 2 mm resolution might substantially increase your RAM needs- these resolutions should be selected with caution.
        #   for most cases, 3 mm or 4 mm resolutions are suggested.
        # NOTE:
        #   this also includes the single-volume 3D preprocessed functional data,
        #   such as the mean functional (mean EPI) in template space
        func_preproc_outputs: 2.3mmx2.3mmx6mm

        # The resolution (in mm) to which the registered derivative outputs are written into.
        # NOTE:
        #   this is for the single-volume functional-space outputs (i.e. derivatives)
        #   thus, a higher resolution may not result in a large increase in RAM needs as above
        func_derivative_outputs: 2.3mmx2.3mmx6mm

      target_template: 
      
        using: [EPI_template]

        # option parameters
        T1_template: 

          # Standard Skull Stripped Template. Used as a reference image for functional registration.
          # This can be different than the template used as the reference/fixed for T1-to-template registration.
          T1w_brain_template_funcreg: /template/study_based_functional_template_sk.nii.gz

          # Standard Anatomical Brain Image with Skull.
          # This can be different than the template used as the reference/fixed for T1-to-template registration.
          T1w_template_funcreg: /template/study_based_functional_template.nii.gz
          
          # Template to be used during registration.
          # It is not necessary to change this path unless you intend to use a non-standard template.
          T1w_brain_template_mask_funcreg: None

          # a standard template for resampling if using float resolution
          T1w_template_for_resample: None

        EPI_template: 

          # EPI template for direct functional-to-template registration
          # (bypassing coregistration and the anatomical-to-template transforms)
          EPI_template_funcreg: /template/study_based_functional_template_sk.nii.gz
          
          # EPI template mask.
          EPI_template_mask_funcreg: None
          
          # a standard template for resampling if using float resolution
          EPI_template_for_resample: None

      ANTs_pipelines: 

        # Interpolation method for writing out transformed functional images.
        # Possible values: Linear, BSpline, LanczosWindowedSinc
        interpolation: Linear

functional_preproc: 

  slice_timing_correction: 

    # Interpolate voxel time courses so they are sampled at the same time points.
    # this is a fork point
    #   run: [On, Off] - this will run both and fork the pipeline
    run: [Off]

  motion_estimates_and_correction: 

    motion_correction: 

      # option parameters
      AFNI-3dvolreg: 

        # This option is useful when aligning high-resolution datasets that may need more alignment than a few voxels.
        functional_volreg_twopass: On

  distortion_correction: 

    # using: ['PhaseDiff', 'Blip']
    #   PhaseDiff - Perform field map correction using a single phase difference image, a subtraction of the two phase images from each echo. Default scanner for this method is SIEMENS.
    #   Blip - Uses AFNI 3dQWarp to calculate the distortion unwarp for EPI field maps of opposite/same phase encoding direction.
    #   NOTE:
    #     this is NOT a fork point - instead, the technique used will depend on what type of distortion correction field data accompanies the dataset
    #     for example, phase-difference field maps will lead to phase-difference distortion correction, and phase-encoding direction field maps will lead to blip-up/blip-down
    using: []

  func_masking: 

    # using: ['AFNI', 'FSL', 'FSL_AFNI', 'Anatomical_Refined', 'Anatomical_Based']
    # this is a fork point
    using: [FSL]

    FSL-BET: 

      # Apply to 4D FMRI data, if bold_bet_functional_mean_boolean : Off.
      # Mutually exclusive with functional, reduce_bias, robust, padding, remove_eyes, surfaces
      # It must be 'on' if select 'reduce_bias', 'robust', 'padding', 'remove_eyes', or 'bet_surfaces' on
      functional_mean_boolean: On

nuisance_corrections: 

  2-nuisance_regression: 

    # Select which nuisance signal corrections to apply
    Regressors: 
      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
          method: AFNI
        CerebrospinalFluid:
          erode_mask: Off
          summary: Mean
        GlobalSignal:
          summary: Mean
        Motion:
          include_delayed: Off
          include_delayed_squared: Off
          include_squared: Off
        Name: Regressor-1

    # Standard Lateral Ventricles Binary Mask
    # used in CSF mask refinement for CSF signal-related regressions
    lateral_ventricles_mask: /template/chd8_functional_template_ventricles_ag.nii.gz

# OUTPUTS AND DERIVATIVES
# -----------------------
post_processing: 

  spatial_smoothing: 

    # Tool to use for smoothing.
    # 'FSL' for FSL MultiImageMaths for FWHM provided
    # 'AFNI' for AFNI 3dBlurToFWHM for FWHM provided
    smoothing_method: [AFNI]

    # Full Width at Half Maximum of the Gaussian kernel used during spatial smoothing.
    # this is a fork point
    #   i.e. multiple kernels - fwhm: [4,6,8]
    fwhm: [6]

timeseries_extraction: 

  run: Off

seed_based_correlation_analysis: 

  # SCA - Seed-Based Correlation Analysis
  # For each extracted ROI Average time series, CPAC will generate a whole-brain correlation map.
  # It should be noted that for a given seed/ROI, SCA maps for ROI Average time series will be the same.
  run: Off

amplitude_low_frequency_fluctuation: 

  # ALFF & f/ALFF
  # Calculate Amplitude of Low Frequency Fluctuations (ALFF) and and fractional ALFF (f/ALFF) for all voxels.
  run: Off

regional_homogeneity: 

  # ReHo
  # Calculate Regional Homogeneity (ReHo) for all voxels.
  run: Off

voxel_mirrored_homotopic_connectivity: 

  # VMHC
  # Calculate Voxel-mirrored Homotopic Connectivity (VMHC) for all voxels.
  run: Off

  symmetric_registration: 

    # Included as part of the 'Image Resource Files' package available on the Install page of the User Guide.
    # It is not necessary to change this path unless you intend to use a non-standard symmetric template.
    T1w_brain_template_symmetric: /template/study_based_functional_template_sk.nii.gz

    # A reference symmetric brain template for resampling
    T1w_brain_template_symmetric_for_resample: /template/study_based_functional_template_sk.nii.gz

    # Included as part of the 'Image Resource Files' package available on the Install page of the User Guide.
    # It is not necessary to change this path unless you intend to use a non-standard symmetric template.
    T1w_template_symmetric: /template/study_based_functional_template.nii.gz

    # A reference symmetric skull template for resampling
    T1w_template_symmetric_for_resample: /template/study_based_functional_template.nii.g

    # Included as part of the 'Image Resource Files' package available on the Install page of the User Guide.
    # It is not necessary to change this path unless you intend to use a non-standard symmetric template.
    dilated_symmetric_brain_mask: /template/tudy_based_functional_template_mask.nii.gz

    # A reference symmetric brain mask template for resampling
    dilated_symmetric_brain_mask_for_resample: /template/tudy_based_functional_template_mask.nii.gz

network_centrality: 

  # Calculate Degree, Eigenvector Centrality, or Functional Connectivity Density.
  run: Off

# PACKAGE INTEGRATIONS
# --------------------
PyPEER: 

  # Template-space eye mask
  eye_mask_path: $FSLDIR/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz
