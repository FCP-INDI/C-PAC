%YAML 1.1
---
# CPAC Pipeline Configuration YAML file
# Version 1.8.3
#
# http://fcp-indi.github.io for more info.
#
# Tip: This file can be edited manually with a text editor for quick modifications.

FROM: default


pipeline_setup: 

  # Name for this pipeline configuration - useful for identification.
  pipeline_name: analysis

  system_config: 

    # The maximum amount of memory each participant's workflow can allocate.
    # Use this to place an upper bound of memory usage.
    # - Warning: 'Memory Per Participant' multiplied by 'Number of Participants to Run Simultaneously'
    #   must not be more than the total amount of RAM.
    # - Conversely, using too little RAM can impede the speed of a pipeline run.
    # - It is recommended that you set this to a value that when multiplied by
    #   'Number of Participants to Run Simultaneously' is as much RAM you can safely allocate.
    maximum_memory_per_participant: 6.0

    # The maximum amount of cores (on a single machine) or slots on a node (on a cluster/grid)
    # to allocate per participant.
    # - Setting this above 1 will parallelize each participant's workflow where possible.
    #   If you wish to dedicate multiple cores to ANTS-based anatomical registration (below),
    #   this value must be equal or higher than the amount of cores provided to ANTS.
    # - The maximum number of cores your run can possibly employ will be this setting multiplied
    #   by the number of participants set to run in parallel (the 'Number of Participants to Run
    #   Simultaneously' setting).
    max_cores_per_participant: 4

    # The number of cores to allocate to ANTS-based anatomical registration per participant.
    # - Multiple cores can greatly speed up this preprocessing step.
    # - This number cannot be greater than the number of cores per participant.
    num_ants_threads: 4

    # Full path to the FSL version to be used by CPAC.
    # If you have specified an FSL path in your .bashrc file, this path will be set automatically.
    FSLDIR: FSLDIR

anatomical_preproc: 
  run: Off

segmentation: 
  run: Off

registration_workflows: 

  anatomical_registration: 
    run: Off

  functional_registration: 
    coregistration:
      run: Off

    EPI_registration:
    
      run: On

      ANTs: 

        # EPI registration configuration - synonymous with T1_registration
        # parameters under anatomical registration above
        parameters: 
          - dimensionality: 3
          - initial-moving-transform:
              initializationFeature: 1
          - transforms:
            - Affine:
                convergence:
                  iteration: 100x100x30
                gradientStep: 0.25
                metric:
                  metricWeight: 1
                  radius: 2
                  type: CC
                shrink-factors: 5x3x1
                smoothing-sigmas: 5x3x0
            - SyN:
                convergence:
                  iteration: 100x100x30
                gradientStep: 0.15
                metric:
                  metricWeight: 1
                  radius: 2
                  type: CC
                shrink-factors: 5x3x1
                smoothing-sigmas: 5x3x0
                totalFieldVarianceInVoxelSpace: 1
                updateFieldVarianceInVoxelSpace: 5

    func_registration_to_template: 

      output_resolution: 

        # The resolution (in mm) to which the preprocessed, registered functional timeseries outputs are written into.
        # NOTE:
        #   selecting a 1 mm or 2 mm resolution might substantially increase your RAM needs- these resolutions should be selected with caution.
        #   for most cases, 3 mm or 4 mm resolutions are suggested.
        # NOTE:
        #   this also includes the single-volume 3D preprocessed functional data,
        #   such as the mean functional (mean EPI) in template space
        func_preproc_outputs: 2.3mmx2.3mmx6mm

        # The resolution (in mm) to which the registered derivative outputs are written into.
        # NOTE:
        #   this is for the single-volume functional-space outputs (i.e. derivatives)
        #   thus, a higher resolution may not result in a large increase in RAM needs as above
        func_derivative_outputs: 2.3mmx2.3mmx6mm

      target_template: 
      
        using: [EPI_template]

        # option parameters
        T1_template: 

          # Standard Skull Stripped Template. Used as a reference image for functional registration.
          # This can be different than the template used as the reference/fixed for T1-to-template registration.
          T1w_brain_template_funcreg: /template/study_based_functional_template_sk.nii.gz

          # Standard Anatomical Brain Image with Skull.
          # This can be different than the template used as the reference/fixed for T1-to-template registration.
          T1w_template_funcreg: /template/study_based_functional_template.nii.gz
          
          # Template to be used during registration.
          # It is not necessary to change this path unless you intend to use a non-standard template.
          T1w_brain_template_mask_funcreg: None

          # a standard template for resampling if using float resolution
          T1w_template_for_resample: None

        EPI_template: 

          # EPI template for direct functional-to-template registration
          # (bypassing coregistration and the anatomical-to-template transforms)
          EPI_template_funcreg: /template/study_based_functional_template_sk.nii.gz
          
          # EPI template mask.
          EPI_template_mask_funcreg: None
          
          # a standard template for resampling if using float resolution
          EPI_template_for_resample: None

      ANTs_pipelines: 

        # Interpolation method for writing out transformed functional images.
        # Possible values: Linear, BSpline, LanczosWindowedSinc
        interpolation: Linear

functional_preproc: 

  slice_timing_correction: 

    # Interpolate voxel time courses so they are sampled at the same time points.
    # this is a fork point
    #   run: [On, Off] - this will run both and fork the pipeline
    run: [Off]

  motion_estimates_and_correction: 

    motion_correction:
      # using: ['3dvolreg', 'mcflirt']
      # this is a fork point
      using: ['mcflirt']

      # option parameters
      AFNI-3dvolreg: 

        # This option is useful when aligning high-resolution datasets that may need more alignment than a few voxels.
        functional_volreg_twopass: Off

  distortion_correction: 
    run: [Off]

  func_masking: 

    # using: ['AFNI', 'FSL', 'FSL_AFNI', 'Anatomical_Refined', 'Anatomical_Based']
    # this is a fork point
    using: [FSL]

    FSL-BET: 

      # Apply to 4D FMRI data, if bold_bet_functional_mean_boolean : Off.
      # Mutually exclusive with functional, reduce_bias, robust, padding, remove_eyes, surfaces
      # It must be 'on' if select 'reduce_bias', 'robust', 'padding', 'remove_eyes', or 'bet_surfaces' on
      functional_mean_boolean: On
      
      # Set an intensity threshold to improve skull stripping performances of FSL BET on rodent scans.
      functional_mean_thr: 
        run: On
        threshold_value: 98

      # Bias correct the functional mean image to improve skull stripping performances of FSL BET on rodent scans
      functional_mean_bias_correction: On
      
      # Integer value of head radius
      radius: 50

      # Robust brain center estimation. Mutually exclusive with functional,reduce_bias,robust,padding,remove_eyes,surfaces
      robust: On

nuisance_corrections: 

  2-nuisance_regression:

    # Select which nuisance signal corrections to apply
    Regressors: 
      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
          method: AFNI
        CerebrospinalFluid:
          erode_mask: Off
          summary: Mean
        GlobalSignal:
          summary: Mean
        Motion:
          include_delayed: Off
          include_delayed_squared: Off
          include_squared: Off
        Name: Regressor-1

    # Standard Lateral Ventricles Binary Mask
    # used in CSF mask refinement for CSF signal-related regressions
    lateral_ventricles_mask: /cpac_templates/chd8_functional_template_noise_mask_ag.nii.gz

# OUTPUTS AND DERIVATIVES
# -----------------------
post_processing: 

  spatial_smoothing: 

    # Tool to use for smoothing.
    # 'FSL' for FSL MultiImageMaths for FWHM provided
    # 'AFNI' for AFNI 3dBlurToFWHM for FWHM provided
    smoothing_method: [AFNI]

    # Full Width at Half Maximum of the Gaussian kernel used during spatial smoothing.
    # this is a fork point
    #   i.e. multiple kernels - fwhm: [4,6,8]
    fwhm: [6]

timeseries_extraction: 

  run: Off

seed_based_correlation_analysis: 

  # SCA - Seed-Based Correlation Analysis
  # For each extracted ROI Average time series, CPAC will generate a whole-brain correlation map.
  # It should be noted that for a given seed/ROI, SCA maps for ROI Average time series will be the same.
  run: Off

amplitude_low_frequency_fluctuation: 

  # ALFF & f/ALFF
  # Calculate Amplitude of Low Frequency Fluctuations (ALFF) and and fractional ALFF (f/ALFF) for all voxels.
  run: Off

regional_homogeneity: 

  # ReHo
  # Calculate Regional Homogeneity (ReHo) for all voxels.
  run: Off

voxel_mirrored_homotopic_connectivity: 

  # VMHC
  # Calculate Voxel-mirrored Homotopic Connectivity (VMHC) for all voxels.
  run: Off

  symmetric_registration: 

    # Included as part of the 'Image Resource Files' package available on the Install page of the User Guide.
    # It is not necessary to change this path unless you intend to use a non-standard symmetric template.
    T1w_brain_template_symmetric: /template/study_based_functional_template_sk.nii.gz

    # A reference symmetric brain template for resampling
    T1w_brain_template_symmetric_for_resample: /template/study_based_functional_template_sk.nii.gz

    # Included as part of the 'Image Resource Files' package available on the Install page of the User Guide.
    # It is not necessary to change this path unless you intend to use a non-standard symmetric template.
    T1w_template_symmetric: /template/study_based_functional_template.nii.gz

    # A reference symmetric skull template for resampling
    T1w_template_symmetric_for_resample: /template/study_based_functional_template.nii.g

    # Included as part of the 'Image Resource Files' package available on the Install page of the User Guide.
    # It is not necessary to change this path unless you intend to use a non-standard symmetric template.
    dilated_symmetric_brain_mask: /template/study_based_functional_template_mask.nii.gz

    # A reference symmetric brain mask template for resampling
    dilated_symmetric_brain_mask_for_resample: /template/study_based_functional_template_mask.nii.gz

network_centrality: 

  # Calculate Degree, Eigenvector Centrality, or Functional Connectivity Density.
  run: Off

# PACKAGE INTEGRATIONS
# --------------------
PyPEER: 

  # Template-space eye mask
  eye_mask_path: $FSLDIR/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz
