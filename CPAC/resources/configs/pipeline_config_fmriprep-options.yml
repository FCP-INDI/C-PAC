%YAML 1.1
---
# CPAC Pipeline Configuration YAML file: preconfig 'fmriprep-options'
# Version 1.8.0.dev
#
# http://fcp-indi.github.io for more info.
#
# Tip: This file can be edited manually with a text editor for quick modifications.

# based on default pipeline
FROM: default

pipeline_setup:

  # Name for this pipeline configuration - useful for identification.
  pipeline_name: cpac_fmriprep-options

  system_config:

    # The number of cores to allocate to ANTS-based anatomical registration per participant.
    # - Multiple cores can greatly speed up this preprocessing step.
    # - This number cannot be greater than the number of cores per participant.
    num_ants_threads: 1

  Amazon-AWS:

    # Enable server-side 256-AES encryption on data to the S3 bucket
    s3_encryption: True

# PREPROCESSING
# -------------

anatomical_preproc:

  # N4 bias field correction via ANTs
  n4_bias_field_correction: True

  acpc_alignment:

    run:

    # ACPC size of brain in z-dimension in mm.
    # Default: 150mm for human data.
    brain_size:

    # ACPC aligned template
    template_skull:
    template_brain:

  brain_extraction:

    extraction:

      # using: ['3dSkullStrip', 'BET', 'UNet', 'niworkflows-ants']
      # this is a fork option
      using: ['niworkflows-ants']

      FSL-BET:

        # Mask created along with skull stripping. It should be `On`, if selected functionalMasking :  ['Anatomical_Refined'] and `FSL` as skull-stripping method.
        mask_boolean: Off

  registration_workflow:

    # The resolution to which anatomical images should be transformed during registration.
    # This is the resolution at which processed anatomical files will be output.
    resolution_for_anat: 1mm

    # Template to be used during registration.
    # It is not necessary to change this path unless you intend to use a non-standard template.
    template_brain_only_for_anat: /code/CPAC/resources/templates/tpl-MNI152NLin2009cAsym_res-01_desc-brain_T1w.nii.gz

    # Template to be used during registration.
    # It is not necessary to change this path unless you intend to use a non-standard template.
    template_skull_for_anat: /code/CPAC/resources/templates/mni_icbm152_t1_tal_nlin_asym_09c.nii

    # Register skull-on anatomical image to a template.
    reg_with_skull: False

    registration:

      # option parameters
      ANTs:

        # ANTs parameters for T1-template-based registration
        T1_registration:

          - collapse-output-transforms: 1
          - transforms:
             - Rigid:
                 gradientStep: 0.05
                 convergence:
                   iteration: 100x100
                   convergenceThreshold: 1e-06
                   convergenceWindowSize: 20
                 smoothing-sigmas: 2.0x1.0vox
                 shrink-factors : 2x1

      FSL-FNIRT:

        # Configuration file to be used by FSL to set FNIRT parameters.
        # It is not necessary to change this path unless you intend to use custom FNIRT parameters or a non-standard template.
        ref_mask :  $FSLDIR/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz

  segmentation_workflow:

    1-segmentation:
      # using: ['FSL-FAST', 'ANTs_Prior_Based', 'Template_Based']
      # this is a fork point
      using: ['Template_Based']

      # option parameters
      ANTs_Prior_Based:

        # ANTs Prior-based Segmentation workflow that has shown optimal results for non-human primate data.
        # this is a fork point
        #   run: [On, Off] - this will run both and fork the pipeline
        run:

        # The atlas image assumed to be used in ANTs Prior-based Segmentation.
        template_brain_list: None

        # The atlas segmentation images.
        # For performing ANTs Prior-based segmentation method
        # the number of specified segmentations should be identical to the number of atlas brain image sets.
        template_segmentation_list: None

        # Label values corresponding to CSF/GM/WM in atlas file
        # It is not necessary to change this values unless your CSF/GM/WM label values are different from Freesurfer Color Lookup Table.
        # https://surfer.nmr.mgh.harvard.edu/fswiki/FsTutorial/AnatomicalROI/FreeSurferColorLUT

        # Label value corresponding to CSF in multiatlas file
        CSF_label: None

        # Label value corresponding to Left Gray Matter in multiatlas file
        left_GM_label: None

        # Label value corresponding to Right Gray Matter in multiatlas file
        right_GM_label: None

        # Label value corresponding to Left White Matter in multiatlas file
        left_WM_label: None

        # Label value corresponding to Right White Matter in multiatlas file
        right_WM_label: None

    2-use_priors:

      # Use template-space tissue priors to refine the binary tissue masks generated by segmentation.
      run: Off

    4-erosion:

      erode_anatomical_brain_mask:

        # Erode binarized anatomical brain mask.
        run: On

      erode_csf:

        # Erode binarized csf tissue mask.
        run: On

      erode_wm:

        # Erode WM binarized tissue mask.
        run: On

      erode_gm:

        # Erode GM binarized tissue mask.
        run: On

functional_preproc:

  motion_estimates_and_correction:

    # calculate motion statistics BEFORE slice-timing correction
    calculate_motion_first: True

    motion_correction:

      # using: ['3dvolreg', 'mcflirt']
      using: ['mcflirt']


    motion_estimate_filter:

  distortion_correction:

    # this is a fork point
    #   run: [True, False] - this will run both and fork the pipeline
    run: True

    # using: ['PhaseDiff', 'Blip']
    #   PhaseDiff - Perform field map correction using a single phase difference image, a subtraction of the two phase images from each echo. Default scanner for this method is SIEMENS.
    #   Blip - Uses AFNI 3dQWarp to calculate the distortion unwarp for EPI field maps of opposite/same phase encoding direction.
    #   NOTE:
    #     this is NOT a fork point - instead, the technique used will depend on what type of distortion correction field data accompanies the dataset
    #     for example, phase-difference field maps will lead to phase-difference distortion correction, and phase-encoding direction field maps will lead to blip-up/blip-down
    using: ['PhaseDiff', 'Blip']

  func_masking:

    # using: ['AFNI', 'FSL', 'FSL_AFNI', 'Anatomical_Refined']
    # this is a fork point
    using: ['FSL_AFNI']

    FSL-BET:

      # Apply to 4D FMRI data, if bold_bet_functional_mean_boolean : Off.
      # Mutually exclusive with functional,reduce_bias,robust,padding,remove_eyes,surfaces
      # It must be 'on' if select 'bold_bet_reduce_bias','bold_bet_robust','bold_bet_padding','bold_bet_remove_eyes',or 'bold_bet_surfaces' on
      functional_mean_boolean:

      # Set the threshold value controling the brain vs non-brain voxels.
      frac:

      # Mesh created along with skull stripping
      mesh_boolean:

      # Create a surface outline image
      outline:

      # Add padding to the end of the image, improving BET.Mutually exclusive with functional,reduce_bias,robust,padding,remove_eyes,surfaces
      padding:

      # Integer value of head radius
      radius:

      # Reduce bias and cleanup neck. Mutually exclusive with functional,reduce_bias,robust,padding,remove_eyes,surfaces
      reduce_bias:

      # Eyes and optic nerve cleanup. Mutually exclusive with functional,reduce_bias,robust,padding,remove_eyes,surfaces
      remove_eyes:

      # Robust brain center estimation. Mutually exclusive with functional,reduce_bias,robust,padding,remove_eyes,surfaces
      robust:

      # Create a skull image
      skull:

      # Gets additional skull and scalp surfaces by running bet2 and betsurf. This is mutually exclusive with reduce_bias, robust, padding, remove_eyes
      surfaces:

      # Apply thresholding to segmented brain image and mask
      threshold:

      # Vertical gradient in fractional intensity threshold (-1,1)
      vertical_gradient:


functional_registration:

  1-coregistration:

    func_input_prep:

      Mean Functional:

        # Run ANTsâ€™ N4 Bias Field Correction on the input BOLD (EPI)
        # this can increase tissue contrast which may improve registration quality in some data
        n4_correct_func:

    boundary_based_registration:

      # Standard FSL 5.0 Scheduler used for Boundary Based Registration.
      # It is not necessary to change this path unless you intend to use non-standard MNI registration.
      bbr_schedule: $FSLDIR/etc/flirtsch/bbr.sch

  2-func_registration_to_template:

    output_resolution:

      # The resolution (in mm) to which the preprocessed, registered functional timeseries outputs are written into.
      # NOTE:
      #   selecting a 1 mm or 2 mm resolution might substantially increase your RAM needs- these resolutions should be selected with caution.
      #   for most cases, 3 mm or 4 mm resolutions are suggested.
      # NOTE:
      #   this also includes the single-volume 3D preprocessed functional data,
      #   such as the mean functional (mean EPI) in template space
      func_preproc_outputs: 3.438mmx3.438mmx3.4mm

      # The resolution (in mm) to which the registered derivative outputs are written into.
      # NOTE:
      #   this is for the single-volume functional-space outputs (i.e. derivatives)
      #   thus, a higher resolution may not result in a large increase in RAM needs as above
      func_derivative_outputs: 3.438mmx3.438mmx3.4mm

      # a standard template for resampling if using float resolution
      template_for_resample: /code/CPAC/resources/templates/tpl-MNI152NLin2009cAsym_res-01_desc-brain_T1w.nii.gz

    target_template:

      # option parameters
      T1_template:

        # Standard Skull Stripped Template. Used as a reference image for functional registration.
        # This can be different than the template used as the reference/fixed for T1-to-template registration.
        template_brain: /code/CPAC/resources/templates/tpl-MNI152NLin2009cAsym_res-02_T1w_reference.nii.gz

        # Standard Anatomical Brain Image with Skull.
        # This can be different than the template used as the reference/fixed for T1-to-template registration.
        template_skull: /code/CPAC/resources/templates/tpl-MNI152NLin2009cAsym_res-02_T1w_reference.nii.gz

      FNIRT_pipelines:

      # Interpolation method for writing out transformed functional images.
      # Possible values: trilinear, sinc, spline
      interpolation: sinc

      # Identity matrix used during FSL-based resampling of functional-space data throughout the pipeline.
      # It is not necessary to change this path unless you intend to use a different template.
      identity_matrix: $FSLDIR/etc/flirtsch/ident.mat

nuisance_corrections:

  2-nuisance_regression:

    # this is a fork point
    #   run: [On, Off] - this will run both and fork the pipeline
    run: [Off]

    # Select which nuisance signal corrections to apply
    Regressors:

      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
        CerebrospinalFluid:
          erode_mask: false
          summary: Mean
          extraction_resolution: 2
        GlobalSignal:
          summary: Mean
        Motion:
          include_delayed: true
          include_delayed_squared: true
          include_squared: true
        PolyOrt:
          degree: 2
        WhiteMatter:
          erode_mask: false
          summary: Mean
          extraction_resolution: 2
        aCompCor:
          summary:
            components: 5
            filter: cosine
            method: PC
          tissues:
            - WhiteMatter
            - CerebrospinalFluid
          extraction_resolution: 2
        tCompCor:
          summary:
            components: 5
            filter: cosine
            method: PC
          threshold: 5PCT
          erode_mask_mm: True
          degree: 2

    # Standard Lateral Ventricles Binary Mask
    # used in CSF mask refinement for CSF signal-related regressions
    lateral_ventricles_mask:

timeseries_extraction:

  run: Off

seed_based_correlation_analysis:

  # SCA - Seed-Based Correlation Analysis
  # For each extracted ROI Average time series, CPAC will generate a whole-brain correlation map.
  # It should be noted that for a given seed/ROI, SCA maps for ROI Average time series will be the same.
  run: Off

amplitude_low_frequency_fluctuation:

  # ALFF & f/ALFF
  # Calculate Amplitude of Low Frequency Fluctuations (ALFF) and and fractional ALFF (f/ALFF) for all voxels.
  run: Off

regional_homogeneity:

  # ReHo
  # Calculate Regional Homogeneity (ReHo) for all voxels.
  run: Off

voxel_mirrored_homotopic_connectivity:

  # VMHC
  # Calculate Voxel-mirrored Homotopic Connectivity (VMHC) for all voxels.
  run: Off

network_centrality:

  # Calculate Degree, Eigenvector Centrality, or Functional Connectivity Density.
  # this is a fork point
  #   run: [On, Off] - this will run both and fork the pipeline
  run: [Off]

  # Maximum amount of RAM (in GB) to be used when calculating Degree Centrality.
  # Calculating Eigenvector Centrality will require additional memory based on the size of the mask or number of ROI nodes.
  memory_allocation:  3.0

  # Full path to a NIFTI file describing the mask. Centrality will be calculated for all voxels within the mask.
  template_specification_file: s3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz

  eigenvector_centrality:

    # Enable/Disable eigenvector centrality by selecting the connectivity weights
    #   weight_options: ['Binarized', 'Weighted']
    # disable this type of centrality with:
    #   weight_options: []
    weight_options: ['Binarized', 'Weighted']

  local_functional_connectivity_density:

    # Select the type of threshold used when creating the lFCD adjacency matrix.
    # options:
    #   'Significance threshold', 'Correlation threshold'
    correlation_threshold_option: 'Significance threshold'

    # Based on the Threshold Type selected above, enter a Threshold Value.
    # P-value for Significance Threshold
    # Sparsity value for Sparsity Threshold
    # Pearson's r value for Correlation Threshold
    correlation_threshold: 0.001

# OUTPUTS AND DERIVATIVES
# -----------------------
post_processing:

  spatial_smoothing:

    # Smooth the derivative outputs.
    run: Off

  z-scoring:

    # z-score standardize the derivatives. This may be needed for group-level analysis.
    run: Off
