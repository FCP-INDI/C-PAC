%YAML 1.1
---
# CPAC Pipeline Configuration YAML file
<<<<<<< HEAD
# Version 1.8.0.dev
=======
# Version 1.8.0.dev
>>>>>>> enh/nested_config
#
# http://fcp-indi.github.io for more info.
#
# Tip: This file can be edited manually with a text editor for quick modifications.

FROM: default


pipeline_setup: 

  # Name for this pipeline configuration - useful for identification.
  pipeline_name: cpac_default_monkey_skullstrip

  output_directory: 

    # Directory where C-PAC should write out processed data, logs, and crash reports.
    # - If running in a container (Singularity/Docker), you can simply set this to an arbitrary
    #   name like '/output', and then map (-B/-v) your desired output directory to that label.
    # - If running outside a container, this should be a full path to a directory.
    path: ./cpac_runs/default/output

  working_directory: 

    # Directory where C-PAC should store temporary and intermediate files.
    # - This directory must be saved if you wish to re-run your pipeline from where you left off (if not completed).
    # - NOTE: As it stores all intermediate files, this directory can grow to become very
    #   large, especially for data with a large amount of TRs.
    # - If running in a container (Singularity/Docker), you can simply set this to an arbitrary
    #   name like '/work', and then map (-B/-v) your desired output directory to that label.
    # - If running outside a container, this should be a full path to a directory.
    # - This can be written to '/tmp' if you do not intend to save your working directory.
    path: ./cpac_runs/default/working

  log_directory: 

    path: ./cpac_runs/default/log

  crash_log_directory: 

    # Directory where CPAC should write crash logs.
    path: ./cpac_runs/default/crash

  system_config: 

    # Select Off if you intend to run CPAC on a single machine.
    # If set to On, CPAC will attempt to submit jobs through the job scheduler / resource manager selected below.
    on_grid: 

      SGE: 

        # SGE Parallel Environment to use when running CPAC.
        # Only applies when you are running on a grid or compute cluster using SGE.
        parallel_environment: cpac

    # The maximum amount of memory each participant's workflow can allocate.
    # Use this to place an upper bound of memory usage.
    # - Warning: 'Memory Per Participant' multiplied by 'Number of Participants to Run Simultaneously'
    #   must not be more than the total amount of RAM.
    # - Conversely, using too little RAM can impede the speed of a pipeline run.
    # - It is recommended that you set this to a value that when multiplied by
    #   'Number of Participants to Run Simultaneously' is as much RAM you can safely allocate.
    maximum_memory_per_participant: 9

    # The number of participant workflows to run at the same time.
    # - The maximum number of cores your run can possibly employ will be this setting
    #   multiplied by the number of cores dedicated to each participant (the 'Maximum Number of Cores Per Participant' setting).
    num_participants_at_once: 3

  Amazon-AWS: 

    # Enable server-side 256-AES encryption on data to the S3 bucket
    s3_encryption: On

# Full path to the FSL version to be used by CPAC.
# If you have specified an FSL path in your .bashrc file, this path will be set automatically.
FSLDIR: FSLDIR

# PREPROCESSING
# -------------

anatomical_preproc: 

  # Non-local means filtering via ANTs DenoiseImage
  non_local_means_filtering: On

  # N4 bias field correction via ANTs
  n4_bias_field_correction: On

  acpc_alignment: 

    run: On

    # ACPC size of brain in z-dimension in mm.
    # Default: 150mm for human data.
    brain_size: 70

    # ACPC aligned template
    template_skull: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_0.5mm.nii.gz

    template_brain: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz

  brain_extraction: 

    extraction: 

      # using: ['3dSkullStrip', 'BET', 'UNet', 'niworkflows-ants']
      # this is a fork option
      using: [UNet]

      # option parameters
      AFNI-3dSkullStrip: 

        # Set it as True if processing monkey data with AFNI
        monkey: On

      FSL-BET: 

        # Set the threshold value controling the brain vs non-brain voxels, default is 0.5
        frac: 0.3

  segmentation_workflow: 

    # Automatically segment anatomical images into white matter, gray matter, and CSF based on prior probability maps.
    # this is a fork point
    #   run: [On, Off] - this will run both and fork the pipeline
    run: [Off]

    1-segmentation: 

      # using: ['FSL-FAST', 'ANTs_Prior_Based', 'Template_Based']
      # this is a fork point
      using: [ANTs_Prior_Based]

      # option parameters
      ANTs_Prior_Based: 

        # ANTs Prior-based Segmentation workflow that has shown optimal results for non-human primate data.
        # this is a fork point
        #   run: [On, Off] - this will run both and fork the pipeline
        run: [On]

        # Generate white matter, gray matter, CSF masks based on antsJointLabelFusion

        # The atlas image assumed to be used in ANTs Prior-based Segmentation.
        template_brain_list: 
          - s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_0.5mm/T1w_brain.nii.gz
          - s3://fcp-indi/resources/cpac/resources/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm/T1w_brain.nii.gz

        # The atlas segmentation images.
        # For performing ANTs Prior-based segmentation method
        # the number of specified segmentations should be identical to the number of atlas brain image sets.
        # eg.
        # ANTs_prior_seg_template_brain_list :
        #   - atlas1.nii.gz
        #   - atlas2.nii.gz
        # ANTs_prior_seg_template_segmentation_list:
        #   - segmentation1.nii.gz
        #   - segmentation1.nii.gz
        template_segmentation_list: 
          - s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_0.5mm/Segmentation.nii.gz
          - s3://fcp-indi/resources/cpac/resources/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm/Segmentation.nii.gz

  registration_workflow: 

    # Template to be used during registration.
    # It is not necessary to change this path unless you intend to use a non-standard template.
    template_brain_only_for_anat: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz

    # Template to be used during registration.
    # It is not necessary to change this path unless you intend to use a non-standard template.
    template_skull_for_anat: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz

    registration: 

      FSL-FNIRT: 

        # Configuration file to be used by FSL to set FNIRT parameters.
        # It is not necessary to change this path unless you intend to use custom FNIRT parameters or a non-standard template.
        ref_mask: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz

functional_preproc: 

  despiking: 

    # Run AFNI 3dDespike
    # this is a fork point
    #   run: [On, Off] - this will run both and fork the pipeline
    run: [On]

  func_masking: 

    # using: ['AFNI', 'FSL', 'FSL_AFNI', 'Anatomical_Refined']
    # this is a fork point
    using: [Anatomical_Refined]

nuisance_corrections: 

  1-ICA-AROMA: 

    # this is a fork point
    #   run: [On, Off] - this will run both and fork the pipeline
    run: [Off]

  2-nuisance_regression: 

    # Select which nuisance signal corrections to apply
    Regressors: 
      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
        CerebrospinalFluid:
          summary:
            components: 5
            method: PC
        GlobalSignal:
          summary: Mean
        Motion:
          include_delayed: true
          include_delayed_squared: true
          include_squared: true
        PolyOrt:
          degree: 2
        WhiteMatter:
          summary:
            components: 5
            method: PC

functional_registration: 

  1-coregistration: 

    func_input_prep: 

      Mean Functional: 

        # Run ANTsâ€™ N4 Bias Field Correction on the input BOLD (EPI)
        # this can increase tissue contrast which may improve registration quality in some data
        n4_correct_func: On

    boundary_based_registration: 

      # this is a fork point
      #   run: [On, Off] - this will run both and fork the pipeline
      run: [Off]

  2-func_registration_to_template: 

    output_resolution: 

      # The resolution (in mm) to which the preprocessed, registered functional timeseries outputs are written into.
      # NOTE:
      #   selecting a 1 mm or 2 mm resolution might substantially increase your RAM needs- these resolutions should be selected with caution.
      #   for most cases, 3 mm or 4 mm resolutions are suggested.
      # NOTE:
      #   this also includes the single-volume 3D preprocessed functional data,
      #   such as the mean functional (mean EPI) in template space
      func_preproc_outputs: 2mm

      # The resolution (in mm) to which the registered derivative outputs are written into.
      # NOTE:
      #   this is for the single-volume functional-space outputs (i.e. derivatives)
      #   thus, a higher resolution may not result in a large increase in RAM needs as above
      func_derivative_outputs: 2mm

      # a standard template for resampling if using float resolution
      template_for_resample: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_2mm.nii.gz

    target_template: 

      # option parameters
      T1_template: 

        # Standard Skull Stripped Template. Used as a reference image for functional registration.
        # This can be different than the template used as the reference/fixed for T1-to-template registration.
        template_brain: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_2mm_brain.nii.gz

        # Standard Anatomical Brain Image with Skull.
        # This can be different than the template used as the reference/fixed for T1-to-template registration.
        template_skull: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_2mm.nii.gz

    FNIRT_pipelines: 

      # Identity matrix used during FSL-based resampling of functional-space data throughout the pipeline.
      # It is not necessary to change this path unless you intend to use a different template.
      identity_matrix: $FSLDIR/etc/flirtsch/ident.mat

# OUTPUTS AND DERIVATIVES
# -----------------------
post_processing: 

  spatial_smoothing: 

    # Smooth the derivative outputs.
    run: [On]

  z-scoring: 

    # z-score standardize the derivatives. This may be needed for group-level analysis.
    run: [On]

timeseries_extraction: 

  # Enter paths to region-of-interest (ROI) NIFTI files (.nii or .nii.gz) to be used for time-series extraction, and then select which types of analyses to run.
  # Denote which analyses to run for each ROI path by listing the names below. For example, if you wish to run Avg and SpatialReg, you would enter: '/path/to/ROI.nii.gz': Avg, SpatialReg
  # available analyses:
  #   /path/to/atlas.nii.gz: Avg, Voxel, SpatialReg, PearsonCorr, PartialCorr
  tse_roi_paths: 

seed_based_correlation_analysis: 

  # Enter paths to region-of-interest (ROI) NIFTI files (.nii or .nii.gz) to be used for time-series extraction, and then select which types of analyses to run.
  # Denote which analyses to run for each ROI path by listing the names below. For example, if you wish to run Avg and MultReg, you would enter: '/path/to/ROI.nii.gz': Avg, MultReg
  # available analyses:
  #   /path/to/atlas.nii.gz: Avg, DualReg, MultReg
  sca_roi_paths: 

voxel_mirrored_homotopic_connectivity: 

  symmetric_registration: 

    # Included as part of the 'Image Resource Files' package available on the Install page of the User Guide.
    # It is not necessary to change this path unless you intend to use a non-standard symmetric template.
    template_symmetric_brain_only: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz

    # A reference symmetric brain template for resampling
    template_symmetric_brain_for_resample: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz

    # Included as part of the 'Image Resource Files' package available on the Install page of the User Guide.
    # It is not necessary to change this path unless you intend to use a non-standard symmetric template.
    template_symmetric_skull: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz

    # A reference symmetric skull template for resampling
    template_symmetric_skull_for_resample: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz

    # Included as part of the 'Image Resource Files' package available on the Install page of the User Guide.
    # It is not necessary to change this path unless you intend to use a non-standard symmetric template.
    dilated_symmetric_brain_mask: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz

    # A reference symmetric brain mask template for resampling
    dilated_symmetric_brain_mask_for_resample: s3://fcp-indi/resources/cpac/resources/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz

network_centrality: 

  # Calculate Degree, Eigenvector Centrality, or Functional Connectivity Density.
  # this is a fork point
  #   run: [On, Off] - this will run both and fork the pipeline
  run: [Off]

  # Maximum amount of RAM (in GB) to be used when calculating Degree Centrality.
  # Calculating Eigenvector Centrality will require additional memory based on the size of the mask or number of ROI nodes.
  memory_allocation: 3.0

  # Full path to a NIFTI file describing the mask. Centrality will be calculated for all voxels within the mask.
  template_specification_file: s3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz

  eigenvector_centrality: 

    # Enable/Disable eigenvector centrality by selecting the connectivity weights
    #   weight_options: ['Binarized', 'Weighted']
    # disable this type of centrality with:
    #   weight_options: []
    weight_options: [Binarized, Weighted]

  local_functional_connectivity_density: 

    # Select the type of threshold used when creating the lFCD adjacency matrix.
    # options:
    #   'Significance threshold', 'Correlation threshold'
    correlation_threshold_option: Significance threshold

    # Based on the Threshold Type selected above, enter a Threshold Value.
    # P-value for Significance Threshold
    # Sparsity value for Sparsity Threshold
    # Pearson's r value for Correlation Threshold
    correlation_threshold: 0.001

# PACKAGE INTEGRATIONS
# --------------------
PyPEER: 

  # Template-space eye mask
  eye_mask_path: $FSLDIR/data/standard/MNI152_T1_${functional_registration.2-func_registration_to_template.output_resolution.func_preproc_outputs}_eye_mask.nii.gz