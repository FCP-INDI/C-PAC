name: Run Regression Lite Test


on:
  #pull_request:
  #  types: [ready_for_review]
  workflow_call:
    secrets: 
      SSH_PRIVATE_KEY:
        required: true
      SSH_USER:
        required: true
      SSH_HOST:
        required: true
      SSH_WORK_DIR:
        required: true

jobs: 
  test:
    name: Regression Test - Lite
    runs-on: ubuntu-latest
    steps: 
      - name: Get C-PAC branch
        run: |
          GITHUB_BRANCH=$(echo ${GITHUB_REF} | cut -d '/' -f 3-)
          if [[ ! $GITHUB_BRANCH == 'main' ]] && [[ ! $GITHUB_BRANCH == 'develop' ]]
          then
            TAG=${GITHUB_BRANCH//\//_}
          elif [[ $GITHUB_BRANCH == 'develop' ]]
          then
            TAG=nightly
          elif [[ $GITHUB_BRANCH == 'main' ]]
          then
            TAG=latest
          fi
          TAG=$TAG$VARIANT
          echo DOCKER_TAG=$(echo "ghcr.io/${{ github.repository }}" | tr '[:upper:]' '[:lower:]'):$TAG >> $GITHUB_ENV
          cat $GITHUB_ENV

      #- name: Checkout Code
      #  uses: actions/checkout@v2
      #- name: Clone slurm_testing
      #  run: |
      #    git clone https://github.com/cmi-dair/slurm_testing

      - name: Install SSH Keys
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H -t rsa ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Connect and Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SSH_WORK_DIR }}
            if [ ! -d slurm_testing ] ; then
                git clone https://github.com/cmi-dair/slurm_testing
            else
                cd slurm_testing
                git pull origin main
                cd ..
            fi
            bash slurm_testing/regression_run_scripts/build_image.sh --working_dir ${{ secrets.SSH_WORK_DIR }} --image ${{ env.DOCKER_TAG }}

      - name: Run Lite Regression Test
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SSH_WORK_DIR }}
            echo "Running lite regression test"
            bash slurm_testing/regression_run_scripts/regtest_lite.sh --working_dir ${{ secrets.SSH_WORK_DIR }} --image ${{ env.DOCKER_TAG }}

      #- name: Configure AWS Credentials
      #  uses: aws-actions/configure-aws-credentials@v2
      #  with:
      #      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #      aws-region: us-east-1

      #- name: Download from S3
      #  run: |
      #    aws s3 cp s3://fcp-indi/resources/cpac/regression/outputs/v1.8.5/lite/ $GITHUB_WORKSPACE/lite/ --recursive

      #- name: Correlating
      #  run: |
      #    echo "Correlating lite regression runs"
      #    echo "(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧"
      #    python3 reg-suite/main.py correlate --pipeline1 $GITHUB_WORKSPACE/output/default/HNU_1 --pipeline2 $GITHUB_WORKSPACE/lite/default/HNU_1--workspace $GITHUB_WORKSPACE

      - name: Cleanup SSH
        run: |
          rm -rf ~/.ssh

      #- uses: actions/upload-artifact@v3
      #  if: always()
      #  with:
      #    name: logs
      #    path: output/*/*/log/
