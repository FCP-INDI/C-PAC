name: Run participant smoke test

on:
  workflow_dispatch:

jobs:
  set-up-check:
    name: Set up GitHub check
    runs-on: ubuntu-latest
    steps:
      - name: Set up check
        uses: Sibz/github-status-action@v1.1.6
        if: ${{ matrix.variant }} != ''
        with:
          authToken: ${{ secrets.ACTIONS_WORKFLOW_TOKEN }}
          context: "Smoke tests"
          state: pending
          target_url: ${{ github.server_url }}/${{ github.repository}}/actions/runs/${{ github.run_id }}
  smoke_test_human:
    name: Human ${{ matrix.preconfig }} participant smoke tests
    runs-on: ubuntu-latest
    needs:
      - set-up-check
    strategy:
      fail-fast: false
      matrix:
        preconfig:
          - default
          - abcd-options
          - anat-only
          - benchmark-ANTS
          - benchmark-FNIRT
          - blank
          - ccs-options
          - fmriprep-options
          - fx-options
          - ndmg
          - preproc
          # - rbc-options
          # - regtest-1
          # - regtest-2
          # - regtest-3
          # - regtest-4
        variant:
          - ''
          - lite
          - ABCD-HCP
          - fMRIPrep-LTS
        participant:
          - 1019436 2014113 3154996 3699991 3884955  # ADHD200
          - NDARAA504CRN NDARAA947ZG5 NDARAB348EWR NDARAB458VK9  # HBN with EPI field maps
          - NDARAD481FXF NDARAV894XWD NDARCA186WGH  # HBN with gradient echo field maps
          - 0025428 0025429 0025448 0025452 0025453 # CoRR HNU
    steps:
      - name: Get C-PAC
        run: |
          if [[ "${{ matrix.variant }}" != "" ]]
          then
            VARIANT=-${{ matrix.variant }}
          fi
          GITHUB_BRANCH=$(echo ${GITHUB_REF} | cut -d '/' -f 3-)
          if [[ ! $GITHUB_BRANCH == 'main' ]] && [[ ! $GITHUB_BRANCH == 'develop' ]]
          then
            TAG=${GITHUB_BRANCH//\//_}
          elif [[ $GITHUB_BRANCH == 'develop' ]]
          then
            TAG=nightly$VARIANT
          elif [[ $GITHUB_BRANCH == 'main' ]]
          then
            TAG=latest$VARIANT
          fi
          TAG=$TAG$VARIANT
          echo DOCKER_TAG=$(echo "ghcr.io/${{ github.repository }}" | tr '[:upper:]' '[:lower:]'):$TAG >> $GITHUB_ENV
          cat $GITHUB_ENV
      - name: Run default smoke test
        if: ${{ matrix.preconfig == 'default' }}
        run: |
          mkdir outputs
          docker run --rm \
            --user $(id -u):$(id -g) -v /etc/passwd:/etc/passwd -v /etc/group:/etc/group \
            -v $PWD/outputs:/outputs \
            ${{ env.DOCKER_TAG }} \
            /outputs /outputs test_config \
            --data_config_file /code/CPAC/resources/configs/test_configs/data-test_human.yml \
            --participant_label ${{ matrix.participant }} \
            --n_cpus 1
      - name: Run ${{ matrix.preconfig }} smoke test
        if: ${{ matrix.preconfig != 'default' }}
        run: |
          mkdir outputs
          docker run --rm \
            --user $(id -u):$(id -g) -v /etc/passwd:/etc/passwd -v /etc/group:/etc/group \
            -v $PWD/outputs:/outputs \
            ${{ env.DOCKER_TAG }} \
            /outputs /outputs test_config \
            --data_config_file /code/CPAC/resources/configs/test_configs/data-test_human.yml \
            --participant_label ${{ matrix.participant }} \
            --preconfig ${{ matrix.preconfig }} \
            --n_cpus 1
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: expectedOutputs human ${{ matrix.preconfig }} ${{ matrix.variant }} ${{ matrix.participant }}
          path: outputs/log/pipeline_*/sub-*/*_expectedOutputs.yml
          if-no-files-found: ignore
  smoke_test_nhp:
    name: Non-human primate ${{ matrix.preconfig }} participant smoke tests
    runs-on: ubuntu-latest
    needs:
      - set-up-check
    strategy:
      fail-fast: false
      matrix:
        preconfig:
          - monkey
          - monkey-ABCD
          - nhp-macaque
        variant:
          - ''
          - lite
          - ABCD-HCP
          - fMRIPrep-LTS
    steps:
      - name: Get C-PAC
        run: |
          if [[ "${{ matrix.variant }}" != "" ]]
          then
            VARIANT=-${{ matrix.variant }}
          fi
          GITHUB_BRANCH=$(echo ${GITHUB_REF} | cut -d '/' -f 3-)
          if [[ ! $GITHUB_BRANCH == 'main' ]] && [[ ! $GITHUB_BRANCH == 'develop' ]]
          then
            TAG=${GITHUB_BRANCH//\//_}
          elif [[ $GITHUB_BRANCH == 'develop' ]]
          then
            TAG=nightly$VARIANT
          elif [[ $GITHUB_BRANCH == 'main' ]]
          then
            TAG=latest$VARIANT
          fi
          TAG=$TAG$VARIANT
          echo DOCKER_TAG=$(echo "ghcr.io/${{ github.repository }}" | tr '[:upper:]' '[:lower:]'):$TAG >> $GITHUB_ENV
          cat $GITHUB_ENV
      - name: Set up datalad-OSF
        run: |
          git config --global user.email "CMI_CPAC_Support@childmind.org"
          git config --global user.name "Theodore (Machine User)"
          wget -O- http://neuro.debian.net/lists/focal.us-tn.libre | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list
          sudo apt-key adv --recv-keys --keyserver hkps://keyserver.ubuntu.com 0xA5D32F012649A5A9
          sudo apt-get update
          sudo apt-get install datalad git-annex-standalone
          pip install datalad-osf
      - name: Get NHP test data
        run: |
          datalad clone osf://xt93j test-data
      - name: Run ${{ matrix.preconfig }} smoke test
        run: |
          mkdir outputs
          docker run --rm \
            --user $(id -u):$(id -g) -v /etc/passwd:/etc/passwd -v /etc/group:/etc/group \
            -v $PWD/test-data:/test-data \
            -v $PWD/outputs:/outputs \
            ${{ env.DOCKER_TAG }} \
            /test-data /outputs test_config \
            --preconfig ${{ matrix.preconfig }} \
            --n_cpus 1
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: expectedOutputs nhp ${{ matrix.preconfig }} ${{ matrix.variant }}
          path: outputs/log/pipeline_*/sub-*/*_expectedOutputs.yml
          if-no-files-found: ignore
  smoke_test_rodent:
    name: Rodent participant smoke tests
    runs-on: ubuntu-latest
    needs:
      - set-up-check
    strategy:
      fail-fast: false
      matrix:
        variant:
          - ''
          - lite
          - ABCD-HCP
          - fMRIPrep-LTS
    steps:
      - name: Get C-PAC
        run: |
          if [[ "${{ matrix.variant }}" != "" ]]
          then
            VARIANT=-${{ matrix.variant }}
          fi
          GITHUB_BRANCH=$(echo ${GITHUB_REF} | cut -d '/' -f 3-)
          if [[ ! $GITHUB_BRANCH == 'main' ]] && [[ ! $GITHUB_BRANCH == 'develop' ]]
          then
            TAG=${GITHUB_BRANCH//\//_}
          elif [[ $GITHUB_BRANCH == 'develop' ]]
          then
            TAG=nightly$VARIANT
          elif [[ $GITHUB_BRANCH == 'main' ]]
          then
            TAG=latest$VARIANT
          fi
          TAG=$TAG$VARIANT
          echo DOCKER_TAG=$(echo "ghcr.io/${{ github.repository }}" | tr '[:upper:]' '[:lower:]'):$TAG >> $GITHUB_ENV
          cat $GITHUB_ENV
      - name: Set up datalad-OSF
        run: |
          git config --global user.email "CMI_CPAC_Support@childmind.org"
          git config --global user.name "Theodore (Machine User)"
          wget -O- http://neuro.debian.net/lists/focal.us-tn.libre | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list
          sudo apt-key adv --recv-keys --keyserver hkps://keyserver.ubuntu.com 0xA5D32F012649A5A9
          sudo apt-get update
          sudo apt-get install datalad git-annex-standalone
          pip install datalad-osf
      - name: Get rodent test data
        run: |
          datalad clone osf://uya3r test-data
      - name: Run rodent smoke test
        run: |
          mkdir outputs
          docker run --rm \
            --user $(id -u):$(id -g) -v /etc/passwd:/etc/passwd -v /etc/group:/etc/group \
            -v $PWD/test-data:/test-data \
            -v $PWD/outputs:/outputs \
            ${{ env.DOCKER_TAG }} \
            /test-data /outputs test_config \
            --preconfig rodent \
            --n_cpus 1
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: expectedOutputs rodent ${{ matrix.variant }}
          path: outputs/log/pipeline_*/sub-*/*_expectedOutputs.yml
          if-no-files-found: ignore
  finish-check:
    name: Finish GitHub check
    runs-on: ubuntu-latest
    if: always()
    needs:
      - smoke_test_human
      - smoke_test_nhp
      - smoke_test_rodent
    steps:
      - name: Update check status
        run: |
          result_failure="\"result\": \"failure\""
          result_cancelled="\"result\": \"cancelled\""
          export STATUS=failure
          if [[ $NEEDS_CONTEXT != *$result_failure* && $NEEDS_CONTEXT != *$result_cancelled* ]]
          then export STATUS=success
          fi
          echo "STATUS=$STATUS" >> $GITHUB_ENV
        env:
          NEEDS_CONTEXT: ${{ toJson(needs) }}
      - name: Finish check
        uses: Sibz/github-status-action@v1.1.6
        with:
          authToken: ${{ secrets.ACTIONS_WORKFLOW_TOKEN }}
          context: "Smoke tests"
          state: ${{ env.STATUS }}
          target_url: ${{ github.server_url }}/${{ github.repository}}/actions/runs/${{ github.run_id }}
