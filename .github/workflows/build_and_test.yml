name: Build and test C-PAC

on:
  push:

jobs:
  C-PAC:
    name: Build Docker C-PAC images
    strategy:
      matrix:
        variant:
          - ''
          - lite
    runs-on: ubuntu-latest
    steps:
      - name: Check out C-PAC
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Get changed files using defaults
        id: dockerfile-changed
        uses: tj-actions/changed-files@v6.2
        with:
          # regex
          files: |
            \.github/Dockerfiles/C-PAC\..*${{ matrix.variant }}\.Dockerfile
      - name: Clear up some space on runner
        if: steps.dockerfile-changed.outputs.any_changed == 'true'
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Set up Docker Buildx
        if: steps.dockerfile-changed.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v1
      - name: Log in to GitHub Container Registry
        if: steps.dockerfile-changed.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set tag & Dockerfile
        run: |
          GITHUB_BRANCH=$(echo ${GITHUB_REF} | cut -d '/' -f 3)
          if [[ ! $GITHUB_BRANCH == 'main' ]] && [[ ! $GITHUB_BRANCH == 'develop' ]]
          then
            TAG=${GITHUB_BRANCH}
            DOCKERFILE=.github/Dockerfiles/C-PAC.develop-bionic.Dockerfile
          elif [[ $GITHUB_BRANCH == 'develop' ]]
          then
            TAG=nightly
            DOCKERFILE=.github/Dockerfiles/C-PAC.develop-bionic.Dockerfile
          elif [[ $GITHUB_BRANCH == 'main' ]]
          then
            TAG=latest
            DOCKERFILE=Dockerfile
          fi
          TAG=$(echo "$GITHUB_REPOSITORY" | cut -d '/' -f 2):${TAG}
          echo DOCKER_TAG=$(echo "ghcr.io/${{ github.repository }}/$TAG" | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo DOCKERFILE="${DOCKERFILE}" >> $GITHUB_ENV
      - name: Prep Dockerfiles for forked repository
        if: ${{ github.repository_owner }} != 'FCP-INDI'
        run: .github/scripts/local_ghcr $DOCKERFILE ${{ github.repository_owner }}
      - name: See Dockerfile
        run: cat $DOCKERFILE
      - name: Build and push Docker image
        if: steps.dockerfile-changed.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2.4.0
        with:
          context: .
          file: ${DOCKERFILE}
          push: true
          tags: |
            ${{ env.DOCKER_TAG }}

  Circle_tests:
    name: Run tests on CircleCI
    needs: C-PAC
    runs-on: ubuntu-latest
    steps:
      - name: Check out C-PAC
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Trigger CircleCI tests
        run: |
            export GITHUB_BRANCH=$(echo ${GITHUB_REF} | cut -d '/' -f 3)
            curl \
            -u ${CIRCLE_API_USER_TOKEN}: \
            --header "Content-Type: application/json" \
            -d '{
              "parameters": {
                "parameters": {
                  "branch": "${GITHUB_BRANCH}",
                  "run_tests": true
                }
              }
            }' \
            https://circleci.com/api/v2/project/github/${GITHUB_REPOSITORY}/pipeline
            