# Requires secret `ACTIONS_WORKFLOW_TOKEN` with `workflow` scope

name: Build stages

on:
  workflow_dispatch:


jobs:
  Ubuntu:
    name: Build C-PAC Ubuntu
    strategy:
      matrix:
        Dockerfile: 
        - Ubuntu.bionic-non-free
        - Ubuntu.xenial-20200114
    runs-on: ubuntu-latest
    outputs:
      rebuilt: ${{ steps.dockerfile-changed.outputs.changed }}
    steps:
      - name: Check out C-PAC (depth 2)
        if: ${{ env.GITHUB_BASE_REF }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Check out C-PAC (depth 0)
        if: ${{ env.GITHUB_BASE_REF }}=="" || !${{ env.GITHUB_BASE_REF}}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed files vs. base branch
        if: ${{ env.GITHUB_BASE_REF }}
        id: ubuntu-dockerfile-changed-base
        uses: tj-actions/changed-files@v11.9
        with:
          base_sha: ${{ env.GITHUB_BASE_REF }}
          files: |
            \.github/*
      - name: Get changed files vs. last remote commit
        if: ${{ env.GITHUB_BASE_REF }}=="" || !${{ env.GITHUB_BASE_REF}}
        id: ubuntu-dockerfile-changed
        uses: tj-actions/changed-files@v11.9
        with:
          files: |
            \.github/*
          since_last_remote_commit: ${{ true }}
      - name: Determine if Dockerfile changed
        id: dockerfile-changed
        run: |
          echo "checking if Dockerfile changed"
          echo '::set-output name=changed::false'
          for CHANGED_FILE in ${{ steps.ubuntu-dockerfile-changed-base.outputs.all_modified_files }}
          do
            if [[ *${{ matrix.Dockerfile }}* == "${CHANGED_FILE}" ]] || [[ ".github/workflows/build_stages.yml" == "${CHANGED_FILE}" ]]
            then
              echo "yep"
              echo '::set-output name=changed::true'
            fi
          done
          for CHANGED_FILE in ${{ steps.ubuntu-dockerfile-changed.outputs.all_modified_files }}
          do
            if [[ *${{ matrix.Dockerfile }}* == "${CHANGED_FILE}" ]] || [[ ".github/workflows/build_stages.yml" == "${CHANGED_FILE}" ]]
            then
              echo "yep"
              echo '::set-output name=changed::true'
            fi
          done
      - name: Clear up some space on runner
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Set up Docker Buildx
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        uses: docker/setup-buildx-action@v1
      - name: Log in to GitHub Container Registry
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set tag
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        run: |
          TAG=$(sed 's/\./:/' <(echo ${{ matrix.Dockerfile }}))
          echo DOCKER_TAG=$(echo "ghcr.io/${{ github.repository }}/$TAG" | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - name: Build and push Docker image
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        uses: docker/build-push-action@v2.7.0
        with:
          file: .github/Dockerfiles/${{ matrix.Dockerfile }}.Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_TAG }}
  
  stages:
    name: Build Docker stage images
    needs: Ubuntu
    strategy:
      matrix:
        Dockerfile:
        - AFNI.16.2.07-xenial
        - AFNI.20.0.04-bionic
        - AFNI.update.afni.binaries-bionic
        - ANTs.2.3.4.neurodocker-xenial
        - ANTs.2.3.4.neurodocker-bionic
        - ANTs.2.3.5-bionic
        - c3d.1.0.0-xenial
        - c3d.1.0.0-bionic
        - FreeSurfer.6.0.0-min.neurodocker-bionic
        - FreeSurfer.6.0.1-xenial
        - FSL.5.0.9-5.neurodebian-xenial
        - FSL.neurodebian-bionic
        - ICA-AROMA.0.4.3-beta-bionic
        - msm.2.0-bionic
    runs-on: ubuntu-latest
    steps:
      - name: Check out C-PAC (depth 2)
        if: ${{ env.GITHUB_BASE_REF }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Check out C-PAC (depth 0)
        if: ${{ env.GITHUB_BASE_REF }}=="" || !${{ env.GITHUB_BASE_REF}}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed files vs. base branch
        if: ${{ env.GITHUB_BASE_REF }}
        id: ubuntu-dockerfile-changed-base
        uses: tj-actions/changed-files@v11.9
        with:
          base_sha: ${{ env.GITHUB_BASE_REF }}
          files: |
            \.github/*
      - name: Get changed files vs. last remote commit
        if: ${{ env.GITHUB_BASE_REF }}=="" || !${{ env.GITHUB_BASE_REF}}
        id: ubuntu-dockerfile-changed
        uses: tj-actions/changed-files@v11.9
        with:
          files: |
            \.github/*
          since_last_remote_commit: ${{ true }}
      - name: Determine if Dockerfile changed
        id: dockerfile-changed
        run: |
          echo '::set-output name=changed::false'
          if [[ ${{ needs.Ubuntu.outputs.rebuilt }} == 'true' ]]
          then
            echo '::set-output name=changed::true'
          else
            for CHANGED_FILE in ${{ steps.dockerfile-changed-base.outputs.all_modified_files }}
            do
              if [[ *${{ matrix.Dockerfile }}* == "${CHANGED_FILE}" ]] || [[ ".github/workflows/build_stages.yml" == "${CHANGED_FILE}" ]]
              then
                echo '::set-output name=changed::true'
              fi
            done
            for CHANGED_FILE in ${{ steps.dockerfile-changed.outputs.all_modified_files }}
            do
              if [[ *${{ matrix.Dockerfile }}* == "${CHANGED_FILE}" ]] || [[ ".github/workflows/build_stages.yml" == "${CHANGED_FILE}" ]]
              then
                echo '::set-output name=changed::true'
              fi
            done
          fi
      - name: Check check
        run: |
          echo ${{ needs.Ubuntu.outputs.rebuilt }}
          echo ${{ steps.dockerfile-changed.outputs.changed }}
      - name: Clear up some space on runner
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Set up Docker Buildx
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        uses: docker/setup-buildx-action@v1
      - name: Log in to GitHub Container Registry
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set tag
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }})
        run: |
          TAG=$(sed 's/\./:/' <(echo ${{ matrix.Dockerfile }}))
          echo DOCKER_TAG=$(echo "ghcr.io/${{ github.repository }}/$TAG" | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - name: Prep Dockerfiles for forked repository
        if: github.repository_owner != 'FCP-INDI'
        run: |
            .github/scripts/local_ghcr .github/Dockerfiles/${{ matrix.Dockerfile }}.Dockerfile ${{ github.repository_owner }}
            cat .github/Dockerfiles/${{ matrix.Dockerfile }}.Dockerfile
      - name: See Dockerfile
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        run: cat .github/Dockerfiles/${{ matrix.Dockerfile }}.Dockerfile
      - name: Set up Docker Buildx
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        uses: docker/setup-buildx-action@v1
      - name: Log in to GitHub Container Registry
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        if: ${{ steps.dockerfile-changed.outputs.changed == 'true' }}
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          file: .github/Dockerfiles/${{ matrix.Dockerfile }}.Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_TAG }}

  trigger-next-workflow:
    needs: stages
    runs-on: ubuntu-latest
    steps:
      - name: Check out C-PAC
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Build and test C-PAC
        run: echo "$ACTIONS_WORKFLOW_TOKEN" | gh auth login --with-token && gh workflow run "Build and test C-PAC" --ref $(echo ${GITHUB_REF} | cut -d '/' -f 3-)
        env:
          ACTIONS_WORKFLOW_TOKEN: ${{ secrets.ACTIONS_WORKFLOW_TOKEN }}
