# Requires secret `ACTIONS_WORKFLOW_TOKEN` with `workflow` scope

name: Build stages

on:
  workflow_dispatch:
    inputs:
      base_ref:
        description: 'Base reference if triggered by a pull request'
        required: false
        default: ""


jobs:
  Ubuntu:
    name: Build C-PAC Ubuntu
    strategy:
      matrix:
        Dockerfile: 
        - Ubuntu.bionic-non-free
        - Ubuntu.xenial-20200114
    runs-on: ubuntu-latest
    steps:
      - name: Check out C-PAC (depth 2)
        if: github.event.inputs.base_ref != ''
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Check out C-PAC (depth 0)
        if: github.event.inputs.base_ref == ''
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed files
        uses: tj-actions/changed-files@v15
        if: github.event.inputs.base_ref != ''
        id: changed-files-base
        with:
          base_sha: ${{ github.event.inputs.base_ref }}
          files: .github/Dockerfiles/*
      - name: Get changed files
        uses: tj-actions/changed-files@v15
        if: github.event.inputs.base_ref == ''
        id: changed-files
        with:
          since_last_remote_commit: "true"
          files: .github/Dockerfiles/*
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)
      - name: Set tag
        run: |
          TAG=$(sed 's/\./:/' <(echo ${{ matrix.Dockerfile }}))
          echo DOCKER_TAG=$(echo "ghcr.io/${{ github.repository }}/$TAG" | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
        if: contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)
      - name: Build and push Docker image
        uses: docker/build-push-action@v2.7.0
        with:
          file: .github/Dockerfiles/${{ matrix.Dockerfile }}.Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        if: contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)
  
  stages:
    name: Build Docker stage images
    needs: Ubuntu
    strategy:
      matrix:
        Dockerfile:
        - AFNI.16.2.07.neurodocker-xenial
        - AFNI.20.0.04-bionic
        - AFNI.update.afni.binaries-bionic
        - ANTs.2.3.4.neurodocker-bionic
        - ANTs.2.3.5-bionic
        - c3d.1.0.0-bionic
        - connectome-workbench.1.3.2-1.neurodebian-bionic
        - connectome-workbench.1.5.0.neurodebian-bionic
        - fMRIPrep.20.2.7-xenial
        - FreeSurfer.6.0.0-min.neurodocker-bionic
        - FSL.neurodebian-bionic
        - ICA-AROMA.0.4.3-beta-bionic
        - msm.2.0-bionic
    runs-on: ubuntu-latest
    steps:
      - name: Check out C-PAC (depth 2)
        if: github.event.inputs.base_ref != ''
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Check out C-PAC (depth 0)
        if: github.event.inputs.base_ref == ''
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed files
        uses: tj-actions/changed-files@v15
        if: github.event.inputs.base_ref != ''
        id: changed-files-base
        with:
          base_sha: ${{ github.event.inputs.base_ref }}
          files: .github/Dockerfiles/*
      - name: Get changed files
        uses: tj-actions/changed-files@v15
        if: github.event.inputs.base_ref == ''
        id: changed-files
        with:
          since_last_remote_commit: "true"
          files: .github/Dockerfiles/*
      - name: Clear up some space on runner
        if: contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)
      - name: Set tag
        run: |
          TAG=$(sed 's/\./:/' <(echo ${{ matrix.Dockerfile }}))
          echo DOCKER_TAG=$(echo "ghcr.io/${{ github.repository }}/$TAG" | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
        if: contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)
      - name: Prep Dockerfiles for forked repository
        if: github.repository_owner != 'FCP-INDI' && contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)
        run: |
            .github/scripts/local_ghcr .github/Dockerfiles/${{ matrix.Dockerfile }}.Dockerfile ${{ github.repository_owner }}
            cat .github/Dockerfiles/${{ matrix.Dockerfile }}.Dockerfile
      - name: See Dockerfile
        run: cat .github/Dockerfiles/${{ matrix.Dockerfile }}.Dockerfile
        if: contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)
      - name: Build and push Docker image
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          file: .github/Dockerfiles/${{ matrix.Dockerfile }}.Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        if: contains(steps.changed-files-base.outputs.all_changed_files, matrix.Dockerfile) || contains(steps.changed-files.outputs.all_changed_files, matrix.Dockerfile)

  trigger-next-workflow:
    needs: stages
    runs-on: ubuntu-latest
    steps:
      - name: Check out C-PAC
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Build and test C-PAC
        run: echo "$ACTIONS_WORKFLOW_TOKEN" | gh auth login --with-token && gh workflow run "Build and test C-PAC" --ref $(echo ${GITHUB_REF} | cut -d '/' -f 3-)
        env:
          ACTIONS_WORKFLOW_TOKEN: ${{ secrets.ACTIONS_WORKFLOW_TOKEN }}
